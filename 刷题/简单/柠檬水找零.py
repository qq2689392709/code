'''
题目
难度：★★☆☆☆
类型：数学

在柠檬水摊上，每一杯柠檬水的售价为 5 美元。

顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。

每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5 美元。

注意，一开始你手头没有任何零钱。

如果你能给每位顾客正确找零，返回 true ，否则返回 false 。

提示
0 <= bills.length <= 10000
bills[i] 不是 5 就是 10 或是 20

示例
示例 1
输入：[5,5,5,10,20]
输出：true
解释：
前 3 位顾客那里，我们按顺序收取 3 张 5 美元的钞票。
第 4 位顾客那里，我们收取一张 10 美元的钞票，并返还 5 美元。
第 5 位顾客那里，我们找还一张 10 美元的钞票和一张 5 美元的钞票。
由于所有客户都得到了正确的找零，所以我们输出 true。

示例 2
输入：[5,5,10]
输出：true

示例 3
输入：[10,10]
输出：false

示例 4
输入：[5,5,10,10,20]
输出：false
解释：
前 2 位顾客那里，我们按顺序收取 2 张 5 美元的钞票。
对于接下来的 2 位顾客，我们收取一张 10 美元的钞票，然后返还 5 美元。
对于最后一位顾客，我们无法退回 15 美元，因为我们现在只有两张 10 美元的钞票。
由于不是每位顾客都得到了正确的找零，所以答案是 false。

解答
这道题对逻辑分析能力要求比较高，各个情况都要考虑全面。我们构建一个字典（wallet）用来存放钞票，并初始化每种面额的钞票数量为零：wallet = {5: 0, 10: 0, 20: 0}，用户给的钞票，无非以下三种情况：

如果客户给了5元，那么无需找零，钱包中面额5的张数+1；

如果客户给了10元，需要查看钱包中有没有面额为5的钞票，如果有，那么把这张钞票找给用户，如果没有，说明无法找零，返回False；

如果客户给了20元，有两种找零方式：
（1）钱包中有至少一张10元钞票和至少一张5元钞票，可以找给用户；
（2）钱包中没有10元钞票，但是有至少三张5元钞票，可以找给用户；

如果不满足上述条件，说明无法找零。

每次找零时，需要更新字典中每张钞票的数量。

'''


class Solution:
    def lemonadeChange(self, bills):
        """
        :param bills: List[int]
        :return: bool
        """
        wallet = {5: 0, 10: 0, 20: 0}  # 钱包
        for bill in bills:
            if bill == 5:  # 如果收到5元钞票
                wallet[5] += 1
            elif bill == 10:  # 收到10元钞票
                if wallet[5] > 0:
                    wallet[5] -= 1
                    wallet[10] += 1
                else:
                    return False
            else:  # 收到20元钞票
                if wallet[10] > 0 and wallet[5] > 0:
                    wallet[10] -= 1
                    wallet[5] -= 1
                    wallet[20] += 1
                elif wallet[5] > 2:
                    wallet[5] -= 3
                    wallet[20] += 1
                else:
                    return False
        return True
